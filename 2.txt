
descriptive statistics
* Step 1: Generate descriptive statistics for all variables.
FREQUENCIES VARIABLES=PHQ1 PHQ2 PHQ3 PHQ4 PHQ5 PHQ6 PHQ7 PHQ8 PHQ9 PHQ10 PHQ11 PHQ12 PHQ13 PHQ14 PHQ15
  Income_US$ Age Gender Education Occupation Social_Status Chronic_disease
  /STATISTICS=MEAN MEDIAN STDDEV MIN MAX SKEWNESS KURTOSIS
  /ORDER=ANALYSIS.

* Step 2: Generate descriptive statistics for total score variables.
DESCRIPTIVES VARIABLES=PHQ13_Total 
  /STATISTICS=MEAN STDDEV MIN MAX.
--------------------

 cutoff scores
* Step 1: Create a new variable PHQ13_cutoff1 based on the condition PHQ13_Total >= 15.
COMPUTE PHQ13_cutoff1 = (PHQ13_Total >= 15).
EXECUTE.

* Step 2: Create a new variable PHQ15_classification based on symptom severity. 
COMPUTE PHQ15_classification = 1.  
IF (PHQ13_Total GE 0 AND PHQ13_Total LE 4) PHQ15_classification = 1.   
IF (PHQ13_Total GE 5 AND PHQ13_Total LE 9) PHQ15_classification = 2.   
IF (PHQ13_Total GE 10 AND PHQ13_Total LE 14) PHQ15_classification = 3.   
IF (PHQ13_Total GE 15) PHQ15_classification = 4.   
EXECUTE.  

* Step 3: Assign labels to the categories.
VALUE LABELS PHQ15_classification   
    1 "Minimal symptoms (0-4)"  
    2 "Mild symptoms (5-9)"  
    3 "Moderate symptoms (10-14)"  
    4 "Severe symptoms (15+)".  
EXECUTE.
------------------

* Step 1: Generate frequency tables for cutoff variables.
FREQUENCIES VARIABLES=PHQ13_cutoff PHQ15_classification /ORDER=ANALYSIS. 
-----------------
Regression analysis

REGRESSION
  /DEPENDENT PHQ13_Total 
  /METHOD=ENTER Chronic_disease

REGRESSION
  /DEPENDENT PHQ13_Total 
  /METHOD=ENTER Chronic_disease HSCL25_Status PCL5_Total Gender CTC_37 Income_US$
------------------
correlation analysis

CORRELATIONS
  /VARIABLES=PHQ13_Total PCL5_Total HSCL25_Status 
  /STATISTICS DESCRIPTIVES
  /PRINT=TWOTAIL NOSIG
  /MISSING PAIRWISE.
------------------
RELIABILITY
  /VARIABLES=PHQ1 PHQ2 PHQ3 PHQ5 PHQ6 PHQ7 PHQ8 PHQ9 PHQ10 PHQ12 PHQ13 PHQ14 PHQ15
  /SCALE('ALL VARIABLES') ALL
  /MODEL=ALPHA
  /STATISTICS=DESCRIPTIVE SCALE
  /SUMMARY=TOTAL.
-------------------
Exploratory factor analysis

* Step 1: Define the variables and perform EFA.
FACTOR
  /VARIABLES PHQ1 PHQ2 PHQ3 PHQ5 PHQ6 PHQ7 PHQ8 PHQ9 PHQ10 PHQ12 PHQ13 PHQ14 PHQ15
  /MISSING LISTWISE 
  /ANALYSIS PHQ1 PHQ2 PHQ3 PHQ5 PHQ6 PHQ7 PHQ8 PHQ9 PHQ10 PHQ12 PHQ13 PHQ14 PHQ15
  /PRINT INITIAL KMO EXTRACTION ROTATION
  /PLOT EIGEN
  /CRITERIA MINEIGEN(1) ITERATE(25)
  /EXTRACTION PC
  /CRITERIA ITERATE(25)
  /ROTATION PROMAX(4)
  /METHOD=CORRELATION.
----------------
---------------------

IRT analysis

if (!require("mirt")) install.packages("mirt")
if (!require("haven")) install.packages("haven")
library(mirt)
library(haven)

setwd("your file path")
data <- read_sav("your file name & location")
phq_items <- c("PHQ1", "PHQ2", "PHQ3", "PHQ5", "PHQ6", "PHQ7", "PHQ8", "PHQ9", "PHQ10", "PHQ12", "PHQ13", "PHQ14", "PHQ15")
phq_data <- data[, phq_items]
phq_data <- as.data.frame(lapply(phq_data, as.numeric))

grm_model <- mirt(phq_data, model = 1, itemtype = "graded", verbose = FALSE)
summary(grm_model)
coef(grm_model, simplify = TRUE)
plot(grm_model, type = "info")
plot(grm_model, type = "info", facet_items = FALSE)
plot(grm_model, type = "trace")

scores <- fscores(grm_model)
head(scores)

M2(grm_model)
itemfit(grm_model)

--------------------

single factor model 

library(lavaan)
library(semTools)

data <- read_sav("file location & file name")

model <- '
  F1 =~ PHQ1 + PHQ2 + PHQ3 + PHQ5 + PHQ6 + PHQ7 + PHQ8 + PHQ9 + PHQ10 + PHQ12 + PHQ13 + PHQ14 + PHQ15
'

cfa_fit <- cfa(model, data = data, estimator = "DWLS", ordered = c("PHQ1", "PHQ2", "PHQ3", "PHQ5", "PHQ6", "PHQ7", "PHQ8", "PHQ9", "PHQ10", "PHQ12", "PHQ13", "PHQ14", "PHQ15"), std.lv = TRUE)

summary(cfa_fit, fit.measures = TRUE, standardized = TRUE)
fit_indices <- fitMeasures(cfa_fit, c("cfi", "tli", "rmsea", "srmr"))
print(fit_indices)
reliability_coefficients <- reliability(cfa_fit)
print(reliability_coefficients)
-------------
two factor model 

library(lavaan)
library(haven)
library(semTools)

data <- read_sav("file location & file name")

model <- '
  F1 =~ PHQ2 + PHQ3 + PHQ5 + PHQ6 + PHQ9 + PHQ10 + PHQ14 + PHQ15
  F2 =~ PHQ1 + PHQ7 + PHQ8 + PHQ12 + PHQ13
  F1 ~~ F2
'

cfa_fit <- cfa(model, data = data, estimator = "DWLS", ordered = c("PHQ1", "PHQ2", "PHQ3", "PHQ5", "PHQ6", "PHQ7", "PHQ8", "PHQ9", "PHQ10", "PHQ12", "PHQ13", "PHQ14", "PHQ15"), std.lv = TRUE)

summary(cfa_fit, fit.measures = TRUE, standardized = TRUE)
fitMeasures(cfa_fit, c("cfi", "tli", "rmsea", "srmr"))
reliability_coefficients <- reliability(cfa_fit)
print(reliability_coefficients)
-----------------
three factor model 

# Load required libraries
library(lavaan)
library(semTools)

# Define the three-factor model based on your specified groupings
model <- '
  # Cardiopulmonary factor
  F1 =~ PHQ10 + PHQ9 + PHQ6 + PHQ8
  # Pain-fatigue factor
  F2 =~ PHQ3 + PHQ2 + PHQ5 + PHQ7 + PHQ15 + PHQ14
  # Gastrointestinal factor
  F3 =~ PHQ13 + PHQ1 + PHQ12
  # Factor correlations
  F1 ~~ F2
  F1 ~~ F3
  F2 ~~ F3
'

# Fit the CFA model
cfa_fit <- cfa(model, 
               data = data,  # Assuming your dataset is named 'data'
               estimator = "DWLS",
               ordered = c("PHQ1", "PHQ2", "PHQ3", "PHQ5", "PHQ6", "PHQ7", "PHQ8", 
                           "PHQ9", "PHQ10", "PHQ12", "PHQ13", "PHQ14", "PHQ15"),
               std.lv = TRUE)

# Display the results
summary(cfa_fit, fit.measures = TRUE, standardized = TRUE)

# Calculate additional fit indices
fit_indices <- fitMeasures(cfa_fit, c("cfi", "tli", "rmsea", "srmr"))
print(fit_indices)

# Calculate reliability
reliability_coefficients <- reliability(cfa_fit)
print(reliability_coefficients)
-----------------
four factor model

# Load required libraries
library(lavaan)
library(haven)
library(semTools)

# Read the SPSS data file
data <- read_sav("file location & file name")

# Define the CFA model based on the EFA pattern matrix
model <- '
  # Factor 1
  F1 =~ PHQ2 + PHQ3 + PHQ5 + PHQ14 + PHQ15
  # Factor 2
  F2 =~ PHQ6 + PHQ9 + PHQ10
  # Factor 3
  F3 =~ PHQ12 + PHQ13
  # Factor 4
  F4 =~ PHQ8 + PHQ1 + PHQ7
  # Factor correlations
  F1 ~~ F2
  F1 ~~ F3
  F1 ~~ F4
  F2 ~~ F3
  F2 ~~ F4
  F3 ~~ F4
'

# Fit the CFA model
cfa_fit <- cfa(model, 
               data = data, 
               estimator = "DWLS",
               ordered = c("PHQ1", "PHQ2", "PHQ3", "PHQ5", "PHQ6", "PHQ7", "PHQ8", 
                           "PHQ9", "PHQ10", "PHQ12", "PHQ13", "PHQ14", "PHQ15"),
               std.lv = TRUE)

# Display the results
summary(cfa_fit, fit.measures = TRUE, standardized = TRUE)

# Calculate additional fit indices
fit_indices <- fitMeasures(cfa_fit, c("cfi", "tli", "rmsea", "srmr"))
print(fit_indices)

# Calculate reliability
reliability_coefficients <- reliability(cfa_fit)

# Display reliability results
print(reliability_coefficients)
